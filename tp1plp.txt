data Doc = Vacio | Texto String Doc | Linea Int Doc


foldDoc :: a -> (b->c->a) -> (d->e->e) -> Doc a-> a
foldDoc fVacio fTexto fLinea Vacio = Vacio
foldDoc fVacio fTexto fLinea (Texto s d) = fTexto s (acc d)
foldDoc fVacio fTexto fLinea (Linea n d) = fLinea n (acc d)
                           where acc = foldDoc fVacio fTexto


(<+>) :: Doc -> Doc -> Doc
(<+>) (Texto s d) vacio = (Texto s d)
(<+>) (Texto s d1) (Linea n d2) =
(<+>) (Linea n d2) (Linea n d2) =  
(<+>) (Texto s1 d1) (Texto s2 d2) = foldDoc s1 (\s recDoc1 ->  if null recDoc1 else s ++ recDoc1 )

